/* The following problem attempts to solve the computational problem:

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. */

var evenFibonacci = function(limit) {
	// Sequence begins with 1 and 2; initializing as a 3-element array.
	// There is no need to save all fibonacci numbers - we only need the previous two numbers, and a third index to hold the sum of these first two numbers
	var fibseq = [1, 2, 0];

	//sum is initialized at 2 since one of the starting elements 2, an even number in the fibonacci sequence
	var sum = 2;

	while (fibseq[0] + fibseq[1] < limit) {
		fibseq[2] = fibseq[0] + fibseq[1];

		if (fibseq[2] % 2 === 0) {
			sum += fibseq[2];
		}

		fibseq[0] = fibseq[1];
		fibseq[1] = fibseq[2];
	}
	return sum;
};

console.log(evenFibonacci(4000000));